{"version":3,"sources":["components/loginRegister/login/login.component.js","components/loginRegister/register/register.component.js","components/loginRegister/choiceButtons.component.js","utils/auth.js","utils/axiosAPI.js","components/loginRegister/loginIndex.component.js","components/snap/sendSnap.component.js","components/snap/webcam.component.js","components/snap/choiceSnap.component.js","components/snap/snapIndex.component.js","components/getSnaps/listItem.component.js","components/getSnaps/snapsList.component.js","components/getSnaps/snapImage.component.js","components/getSnaps/showSnap.component.js","components/getSnaps/getSnapsIndex.component.js","components/mainApp.component.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","useState","formControl","setFormControl","handleChange","event","target","name","value","className","registered","onSubmit","preventDefault","handleSubmit","errorMessage","type","onChange","onClick","handleClick","Register","isInvalid","setIsInvalid","useEffect","email","invalids","test","password","length","cpassword","Object","keys","ChoiceButtons","e","authHeader","user","Cookies","getJSON","token","aio","axios","create","baseURL","timeout","getSnaps","get","headers","LoginIndex","selectedPage","setSelectedPage","handleChoice","choice","handleRegister","handleLogin","data","post","then","loginEmail","catch","res","set","expires","loginUser","src","alt","SendSnap","url","URL","createObjectURL","imageFile","userList","setUserList","id","map","key","duration","document","getElementById","recipient","formData","FormData","append","console","log","WebcamCapture","webcamRef","React","useRef","capture","useCallback","img","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","Blob","dataURItoBlob","current","getScreenshot","handleImg","audio","ref","screenshotFormat","ChoiceImage","files","SnapIndex","isCliqued","setIsCliqued","handleChoiceImg","ListItem","from","showSnap","SnapsList","snaps","snap","snap_id","updateSnaps","SnapImage","imageData","counter","setCounter","interval","startCounter","setInterval","clearInterval","ShowSnap","setImageData","deleted","setDeleted","setStartCounter","responseType","getSnap","myImage","Image","postSeen","timer","setTimeout","clearTimeout","GetSnapsIndex","selectedSnap","setSelectedSnap","setSnaps","err","getSnapsFN","MainApp","page","setPage","handleLogout","App","setUser","currentUser","getCurrentUser","remove","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3942e8af.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Login(props) {\n    const [formControl, setFormControl] = useState();\n\n\n    function handleChange(event) {\n        setFormControl({ ...formControl, [event.target.name]: event.target.value })\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.handleSubmit(formControl);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-lg-5\">\n                    {props.registered && <h4 className=\"mb-4 text-center text-success\">Registered successfully, please login.</h4>}\n                    <form onSubmit={handleSubmit} className=\"px-5\" >\n                        {props.errorMessage && <h5 className=\"text-danger\">{props.errorMessage}</h5>}\n                        <div className=\"form-group\">\n                            <label className=\"white text-left\">Email</label>\n                            <input type=\"text\" className=\"form-control\" name=\"email\" onChange={handleChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"white text-left\">Password</label>\n                            <input type=\"password\" className=\"form-control\" name=\"password\" onChange={handleChange} />\n                        </div>\n                        <div className=\"text-center mt-4\">\n                            <small className=\"form-text text-white\">Don't have an account yet ? <span onClick={() => props.handleClick('register')}><b><u>Sign up</u></b></span></small>\n                            <button type=\"submit\" className=\"btn btn-warning white mt-3\">Login</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\n\nfunction Register(props) {\n    const [formControl, setFormControl] = useState({});\n    const [isInvalid, setIsInvalid] = useState(false);\n\n    function handleChange(event) {\n        setFormControl({ ...formControl, [event.target.name]: event.target.value })\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        let invalids = {};\n\n        if(formControl.email){\n            if(!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(formControl.email))) {\n                invalids.email = 'Please enter a correct email adress';\n            }\n        } else {\n            invalids.email = 'Email required';\n        }\n        \n        if(formControl.password) {\n            if(formControl.password.length < 5) {\n                invalids.password = 'Your password need to be at least 5 characters long';\n            }\n        } else {\n            invalids.password = 'Password required';\n        }\n\n        if(formControl.cpassword){\n            if(formControl.cpassword !== formControl.password) {\n                invalids.cpassword = 'Password do not match';\n            }\n        } else {\n            invalids.cpassword = 'Password confirmation required';\n        }\n\n        if(Object.keys(invalids).length === 0) {\n            props.handleSubmit(formControl);\n            setIsInvalid(invalids);   \n        } else {\n            setIsInvalid(invalids);   \n        }\n    }\n\n\n    useEffect(() => {\n        if(props.errorMessage) {\n            setIsInvalid({email:props.errorMessage});\n        }\n    }, [props.errorMessage]);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-lg-5\">\n                    <form onSubmit={handleSubmit} className=\"px-5\">\n                        <div className=\"form-group\">\n                            <label className=\"white\">Email</label>\n                            <input type=\"text\" className={\"form-control \" + (isInvalid.email ? 'is-invalid' : '')} name=\"email\" onChange={handleChange} />\n                            <div className=\"invalid-feedback\">{ isInvalid.email }</div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"white\">Password</label>\n                            <input type=\"password\" className={\"form-control \" + (isInvalid.password ? 'is-invalid' : '')} name=\"password\" onChange={handleChange} />\n                            <div className=\"invalid-feedback\">{isInvalid.password}</div>\n                        </div>\n                        <div className=\"form-group has-danger\">\n                            <label className=\"white\">Confirm Password</label>\n                            <input type=\"password\" className={\"form-control \" + (isInvalid.cpassword ? 'is-invalid' : '')} name=\"cpassword\" onChange={handleChange} />\n                            <div className=\"invalid-feedback\">{isInvalid.cpassword}</div>\n                        </div>\n                        <div className=\"text-center mt-4\">\n                            <small className=\"form-text text-white\">Already have an account ? <span onClick={() => props.handleClick('login')}><b><u>login</u></b></span></small>\n                            <button type=\"submit\" className=\"btn btn-warning white mt-3\">Sign up</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;","import React from 'react';\n\nfunction ChoiceButtons(props) {\n\n    function onRegisterClick(e) {\n        e.preventDefault();\n        props.handleClick('register');\n    }\n\n    function onLoginClick(e) {\n        e.preventDefault();\n        props.handleClick('login');\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-lg-5 px-5\">\n                    <button type=\"button\" className=\"btn btn-warning btn-lg btn-block mb-4\" onClick={onRegisterClick}>Sign up</button>\n                    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={onLoginClick}>Login</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ChoiceButtons;","import Cookies from 'js-cookie';\n\nexport default function authHeader() {\n    const user = Cookies.getJSON('user');\n    \n    if (user.token) {\n        return { 'token' : user.token };\n    } else {\n        return {};\n    }\n}\n\nexport function getCurrentUser() {\n    const user = Cookies.getJSON('user');\n    if (!user) return;\n    return user;\n}\n\nexport function deleteUserToken() {\n    Cookies.remove('user');\n    return true;\n}\n\nexport function loginUser(email, token) {\n    Cookies.set('user', {email, token}, { expires: 7 });\n}","import axios from 'axios';\nimport authHeader from './auth';\n\nconst aio = axios.create({\n    baseURL: 'http://snapi.epitech.eu/',\n    timeout: 1500\n});\n\nexport function getAll() {\n    return aio.get('/all', {\n        headers: authHeader()\n    });\n}\n\nexport function getSnaps() {\n    return aio.get('/snaps', {\n        headers: authHeader()\n    });\n}\n\nexport function getSnap(id) {\n    return aio.get('/snap/' + id, {\n        headers: authHeader(),\n        responseType: 'blob'\n    });\n}\n\nexport function postRegister(email, password) {\n    return aio.post('/inscription',\n        { email, password },\n        { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nexport function postLogin(email, password) {\n    return aio.post('/connection', { email, password },\n        { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nexport function postSnap(data) {\n    return aio.post('/snap',\n        data,\n        {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                ...authHeader()\n            }\n        }\n    );\n}\n\nexport function postSeen(id) {\n    return aio.post('/seen',\n        { id },\n        {\n            headers: {\n                ...authHeader(),\n                \"Content-Type\": \"application/json\"\n            }\n        }\n    );\n}\n\n","import React, { useState } from 'react';\nimport Login from './login/login.component';\nimport Register from './register/register.component';\nimport ChoiceButtons from './choiceButtons.component';\nimport { postRegister, postLogin } from '../../utils/axiosAPI';\nimport { loginUser } from '../../utils/auth';\n\nfunction LoginIndex(props) {\n    const [selectedPage, setSelectedPage] = useState(false);\n\n    function handleChoice(choice) {\n        if (choice === 'register') {\n            setSelectedPage(<Register handleSubmit={handleRegister} handleClick={handleChoice} />);\n        } else {\n            setSelectedPage(<Login handleSubmit={handleLogin} handleClick={handleChoice} />);\n        }\n    }\n\n    function handleRegister(data) {\n        setSelectedPage(<Register handleSubmit={handleRegister} handleClick={handleChoice} errorMessage={null}/>);\n\n        postRegister(data.email, data.password)\n            .then(() => {\n                setSelectedPage(<Login handleSubmit={handleLogin} handleClick={handleChoice} loginEmail={data.email} registered={true}/>)\n            })\n            .catch(() => {\n                setSelectedPage(<Register handleSubmit={handleRegister} handleClick={handleChoice} errorMessage={'Email already taken.'}/>);\n            });\n    }\n\n    function handleLogin(data) {\n        setSelectedPage(<Login handleSubmit={handleLogin} handleClick={handleChoice} loginEmail={data.email} errorMessage={null}/>)\n        postLogin(data.email, data.password)\n            .then(res => {\n                loginUser(res.data.data.email, res.data.data.token);\n                props.handleLogin(res.data.data.email);\n            })\n            .catch(() => {\n                setSelectedPage(<Login handleSubmit={handleLogin} handleClick={handleChoice} loginEmail={data.email} errorMessage={'Incorrect email or password.'}/>)\n            });\n    }\n\n    return (\n        <div className=\"login-index\">\n            <div className=\"logo\">\n                <img src=\"https://cdn.frankerfacez.com/emoticon/145916/4\" alt=\"KKOMRADE\"></img>\n                <h1 className=\"text-center\">Our Snapchat</h1>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center vh-100\">\n                {selectedPage || <ChoiceButtons handleClick={handleChoice} />}\n            </div>\n        </div>\n    );\n}\n\nexport default LoginIndex;","import React, { useState, useEffect } from 'react';\nimport { getAll, postSnap } from '../../utils/axiosAPI';\n\nfunction SendSnap(props) {\n    let url = URL.createObjectURL(props.imageFile);\n    const [userList, setUserList] = useState([]);\n\n    useEffect(() => {\n        getAll().then(res => {\n            setUserList(res.data.data)\n        });\n    }, []);\n\n    function headersSnap() {\n        let duration = document.getElementById(\"selectDuration\").value;\n        let recipient = document.getElementById(\"selectRecipient\").value;\n\n        let formData = new FormData();\n        formData.set(\"to\", recipient);\n        formData.set(\"duration\", duration);\n        formData.append(\"image\", props.imageFile);\n\n        postSnap(formData).then(() => {\n            console.log('sent');\n        }).catch(() => {\n            console.log('error');\n        });\n\n        props.handleClick('send');\n    }\n\n    return (\n        <div className=\"px-2 pt-0 test\">\n            <img src={url} className='apercuSnap' alt=\"snapPreview\" />\n            <div className=\"px-5\">\n                <select id=\"selectDuration\">\n                    <option value='3'>3</option>\n                    <option value='5'>5</option>\n                    <option value='10'>10</option>\n                    <option value='15'>15</option>\n                </select>\n                <select id=\"selectRecipient\">\n                    {userList.map(e => (<option key={e.email}>{e.email}</option>))}\n                </select>\n                <button className=\"sendsnap\" onClick={headersSnap}>Send <i className=\"fas fa-paper-plane\"></i></button>\n            </div>\n            <p className=\"mt-3 w-100 text-center text-white\" onClick={() => props.handleClick('send')}><u>Take another picture</u></p>\n        </div>\n    );\n}\n\nexport default SendSnap;","import React from 'react';\nimport Webcam from \"react-webcam\";\n\nfunction WebcamCapture(props) {\n    const webcamRef = React.useRef(null);\n\n    function dataURItoBlob(dataURI) {\n        var byteString;\n        if (dataURI.split(',')[0].indexOf('base64') >= 0)\n            byteString = atob(dataURI.split(',')[1]);\n        else\n            byteString = unescape(dataURI.split(',')[1]);\n\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n        var ia = new Uint8Array(byteString.length);\n        for (var i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ia], {type:mimeString});\n    }\n\n    const capture = React.useCallback(() => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        const img = dataURItoBlob(imageSrc);\n        props.handleImg(img);\n    }, [webcamRef, props]);\n\n    return (\n        <>\n            <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/png\"\n            />\n            <button onClick={capture} className=\"btn btn-primary w-100\">Capture photo</button>\n\n        </>\n    );\n};\n\nexport default WebcamCapture;","import React from 'react';\nimport WebCam from './webcam.component';\n\nfunction ChoiceImage(props) {\n\n    function getImage(e) {\n        props.handleImg(e.target.files[0]);\n    }\n\n    return (\n        <div className=\"px-5\">\n            <label className=\"labelfile\">\n                <p className='choiceSnap'>Choose Image</p>\n                <input type=\"file\" className=\"inputfile\" onChange={getImage}/>\n            </label>\n            <WebCam handleImg={props.handleImg}/>\n        </div>\n    );\n}\n\nexport default ChoiceImage;","import React, { useState } from 'react';\nimport SendSnap from './sendSnap.component';\nimport ChoiceSnap from './choiceSnap.component';\n\nfunction SnapIndex(props) {\n    const [isCliqued, setIsCliqued] = useState(false);\n\n    function handleImg(data) {\n        setIsCliqued(<SendSnap handleClick={handleChoiceImg} imageFile={data} />)\n    }\n\n    function handleChoiceImg(choice) {\n        choice = choice === 'snaped' ? <SendSnap handleClick={handleChoiceImg} /> : <ChoiceSnap handleClick={handleChoiceImg} handleImg={handleImg}/>;\n        setIsCliqued(choice);\n    }\n\n    return (\n        <div className=\"login-index\">\n            <div className={\"logo\"}>\n                <img src=\"https://cdn.frankerfacez.com/emoticon/145916/4\" alt=\"KKOMRADE\"></img>\n                <h1 className=\"text-center\">Take a Snap</h1>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center vh-100\">\n                {isCliqued || <ChoiceSnap handleClick={handleChoiceImg} handleImg={handleImg}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default SnapIndex;","import React from 'react';\n\nfunction ListItem(props) {\n    const { from, duration, id } = props;\n\n    return (\n        <div className=\"list-item my-1 mx-2 d-flex justify-content-between\">\n            <h3 className=\"text-center text-white w-100\" onClick={() => props.showSnap(id, from, duration)}>{from}</h3>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './listItem.component';\n\nfunction SnapsList(props) {\n    const { snaps } = props;\n\n    return (\n        <div className=\"snaplist\">\n            <div className=\"logo\">\n                <img src=\"https://cdn.frankerfacez.com/emoticon/145916/4\" alt=\"KKOMRADE\"></img>\n                <h1 className=\"text-center\">Your Snaps</h1>\n            </div>\n            <div className=\"container px-3\">\n\n                <div className=\"list px-2\">\n                    {snaps.map(snap => <ListItem key={snap.snap_id} showSnap={props.showSnap} id={snap.snap_id} from={snap.from} duration={snap.duration} />)}\n                </div>\n\n            </div>\n            <button className=\"btn btn-secondary btn-refresh\" onClick={props.updateSnaps}>refresh</button>\n\n        </div>\n    );\n}\n\nexport default SnapsList;","import React, { useState, useEffect } from 'react';\n\nfunction SnapImage(props) {\n    const { from, duration, imageData } = props;\n    const [counter, setCounter] = useState(duration);\n\n    useEffect(() => {\n        let interval;\n        if(props.startCounter) {\n            interval = setInterval(() => {\n                setCounter(counter => counter - 1);\n            }, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [props.startCounter]);\n\n    return (\n        <div className=\"px-4\">\n            <div className=\"snap-frame h-50\">\n                <img src={imageData} className='snap-image' alt=\"snapimage\" />\n            </div>\n            <h3 className=\"text-white text-center mb-3\">From : {from}</h3>\n            <h1 className=\"counter-strike text-white text-center\">{counter}</h1>\n            <button className=\"btn-back btn btn-lg btn-block btn-secondary mt-3\" onClick={props.updateSnaps}>Back</button>\n        </div>\n    );\n}\n\nexport default SnapImage;","import React, { useState, useEffect } from 'react';\nimport { getSnap, postSeen } from '../../utils/axiosAPI';\nimport SnapImage from './snapImage.component';\n\nfunction ShowSnap(props) {\n    const { id, from, duration, updateSnaps} = props;\n    const [imageData, setImageData] = useState();\n    const [deleted, setDeleted] = useState(false);\n    const [startCounter, setStartCounter] = useState(false);\n\n    useEffect(() => {\n        getSnap(id)\n            .then(res => {\n                let myImage = new Image;\n                myImage.src = URL.createObjectURL(res.data);\n                setImageData(myImage.src);\n                setStartCounter(true);\n                postSeen(id);\n            })\n            .catch(() => {\n                setDeleted(true);\n            })\n\n        const timer = setTimeout(() => {\n            updateSnaps();\n        }, (duration * 1000));\n        return () => clearTimeout(timer);\n    }, [duration, id, updateSnaps]);\n\n    return (\n        <div>\n            {deleted ? <h1 className=\"text-white text-center mt-5\">Snap deleted</h1>\n            : <SnapImage startCounter={startCounter} updateSnaps={props.updateSnaps} from={from} duration={duration} imageData={imageData} />}\n        </div>\n    );\n}\n\nexport default ShowSnap;","import React, { useState, useEffect } from 'react';\nimport { getSnaps } from '../../utils/axiosAPI';\nimport SnapsList from './snapsList.component';\nimport ShowSnap from './showSnap.component';\n\nfunction GetSnapsIndex(props) {\n    const [selectedSnap, setSelectedSnap] = useState(false);\n    const [snaps, setSnaps] = useState([]);\n\n    function showSnap(id, from, duration) {\n        setSelectedSnap(<ShowSnap id={id} from={from} duration={duration} updateSnaps={updateSnaps} />);\n    }\n\n    function updateSnaps() {\n        getSnaps()\n            .then(res => {\n                setSnaps(res.data.data);\n                setSelectedSnap(false);\n            })\n            .catch(err => console.log(err));\n    }\n\n    useEffect(() => {\n        function getSnapsFN() {\n            getSnaps()\n                .then(res => {\n                    setSnaps(res.data.data);\n                })\n                .catch(err => console.log(err));\n        }\n        getSnapsFN();\n        const interval = setInterval(() => {\n            getSnapsFN();\n        }, 10000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div>\n            {selectedSnap || <SnapsList snaps={snaps} showSnap={showSnap} updateSnaps={updateSnaps} />}\n        </div>\n    );\n}\n\nexport default GetSnapsIndex;","import React, { useState } from 'react';\nimport SnapIndex from './snap/snapIndex.component';\nimport GetSnapsIndex from './getSnaps/getSnapsIndex.component';\n\nfunction MainApp(props) {\n    const [page, setPage] = useState(<GetSnapsIndex />);\n\n    function handleSendClick() {\n        setPage(<SnapIndex />);\n    }\n\n    function handleSnapsClick() {\n        setPage(<GetSnapsIndex />);\n    }\n\n    return (\n        <div className=\"px-0\">\n            { page }\n            <div className=\"navigation d-flex justify-content-between\">\n                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={handleSendClick}>Send</button>\n                <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={handleSnapsClick}>Snaps</button>\n                <button type=\"button\" className=\"btn btn-danger btn-lg\" onClick={props.handleLogout}>log out</button>\n            </div>\n        </div>\n    );\n}\n\nexport default MainApp;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport LoginIndex from './components/loginRegister/loginIndex.component';\nimport { getCurrentUser, deleteUserToken } from './utils/auth';\nimport MainApp from './components/mainApp.component';\n\nfunction App() {\n  const [user, setUser] = useState(false);\n\n  function handleLogin(email) {\n    setUser(email);\n  }\n\n  function handleLogout() {\n    setUser(false);\n    deleteUserToken();\n  }\n\n  useEffect(() => {\n    const currentUser = getCurrentUser();\n\n    if (currentUser) {\n      setUser(currentUser.email);\n    }\n  }, [])\n\n  return (\n    <div>\n      {user ? <MainApp handleLogout={handleLogout} /> : (<LoginIndex handleLogin={handleLogin} />)}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}